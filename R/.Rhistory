library(ggplot2)
library(dplyr)
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Load the dataset
movies <- read.csv("D:/siddh/coding/R/Assignment/movies.csv")
# Convert Release_Period to a categorical variable
movies$Release_Period <- as.factor(movies$Release_Period)
head(movies)
summarise(movies)
summary(movies)
is.na(movies)
is.na(movies.colums)
is.na(movies)
# Convert Release_Period to a categorical variable
movies$Release_Period <- as.factor(movies$Release_Period)
head(movies$Release_Period)
# Summary statistics for revenue and budget
summary(movies$Revenue.INR)
summary(movies$Budget.INR)
# Calculate profit and profit margin
movies$Profit <- movies$Revenue.INR - movies$Budget.INR
movies$Profit_Margin <- (movies$Profit / movies$Budget.INR) * 100
head(movies$Profit_Margin)
# Analyze revenue trends by release period
revenue_trends <- movies %>%
group_by(Release_Period) %>%
summarise(Average_Revenue = mean(Revenue.INR., na.rm = TRUE))
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar( fill = "steelblue") +
theme_minimal() +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(fill = "steelblue") +
theme_minimal() +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(fill = "steelblue") +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Visualize revenue by genre
ggplot(genre_trends, aes(x = reorder(Genre, Average_Revenue), y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
# Analyze revenue by genre
genre_trends <- movies %>%
group_by(Genre) %>%
summarise(Average_Revenue = mean(Revenue.INR., na.rm = TRUE)) %>%
arrange(desc(Average_Revenue))
# Visualize revenue by genre
ggplot(genre_trends, aes(x = reorder(Genre, Average_Revenue), y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
install.packages(c("tidyverse", "lubridate", "skimr", "ggplot2"))
library(tidyverse)
library(lubridate)
library(skimr)
library(tidyverse)
library(lubridate)
library(skimr)
library(ggplot2)
data <- read.csv("D:/siddh/coding/R/data/23AIML070 THAKOR SIDDHRAJ ANILKUMAR - sales_data.csv")  # Replace with the correct path to your dataset
data$Sale_Date <- as.Date(data$Sale_Date, format = "%Y-%m-%d")
summary(data)
data_cols()
data[,1]
data[,]
head(data)
data$Sale_Date <- as.Date(data$Sale_Date, format = "%Y-%m-%d")
data$Year <- year(data$Sale_Date)
data$Month <- month(data$Sale_Date, label = TRUE)
data$Weekday <- weekdays(data$Sale_Date)
head(data)
summary(data %>% select(Sales_Amount, Quantity_Sold, Unit_Cost, Unit_Price, Discount))
print("Missing values per column:")
print(colSums(is.na(data)))
print("Number of duplicate rows:")
print(sum(duplicated(data)))
skim(data)
print(sum(is.na(data)))
colS
print(colSums(is.na(data)))
skim(data)
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount, fill = Region)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount, fill = Region)) +
geom_bar(stat = "identity", show.legend = TRUE) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
FALSE\
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount, fill = Region)) +
geom_bar(stat = "identity", show.legend = ) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount, fill = Region)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
# Line plot showing Sales Amount Trend Over Time
# This graph shows the trend of sales amount over time. It helps to identify any seasonal patterns or trends in sales.
ggplot(data, aes(x = Sale_Date, y = Sales_Amount)) +
geom_line() +
labs(title = "Sales Amount Trend Over Time", x = "Date", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales by Product Category
# This graph displays the total sales amount for each product category. It helps to identify which product categories are the most popular.
ggplot(data, aes(x = Product_Category, y = Sales_Amount, fill = Product_Category)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales by Product Category", x = "Product Category", y = "Sales Amount") +
theme_minimal()
# Box plot showing Discount by Customer Type
# This graph shows the distribution of discounts given to different customer types. It helps to identify if certain customer types are receiving higher discounts.
ggplot(data, aes(x = Customer_Type, y = Discount, fill = Customer_Type)) +
geom_boxplot() +
labs(title = "Discount by Customer Type", x = "Customer Type", y = "Discount") +
theme_minimal()
cor_matrix <- data %>%
select(Sales_Amount, Quantity_Sold, Unit_Cost, Unit_Price, Discount) %>%
cor()
print("Correlation Matrix:")
print(cor_matrix)
head(data)
# Bar plot showing Sales Amount by Payment Method
# This graph displays the total sales amount for each payment method. It helps to identify which payment methods are most commonly used by customers.
ggplot(data, aes(x = Payment_Method, y = Sales_Amount, fill = Payment_Method)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Payment Method", x = "Payment Method", y = "Sales Amount") +
theme_minimal()
sales_by_region_rep <- data %>%
group_by(Region, Sales_Rep) %>%
summarise(total_sales = sum(Sales_Amount, na.rm = TRUE))
print("Total Sales by Region and Sales Rep:")
print(sales_by_region_rep)
avg_sales_by_category <- data %>%
group_by(Product_Category) %>%
summarise(avg_sales = mean(Sales_Amount, na.rm = TRUE))
print("Average Sales by Product Category:")
print(avg_sales_by_category)
# Box plot showing Outliers in Sales Amount
# This graph shows the distribution of sales amounts and highlights any outliers. It helps to identify any unusually high or low sales amounts.
ggplot(data, aes(x = "", y = Sales_Amount)) +
geom_boxplot() +
labs(title = "Outliers in Sales Amount", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Payment Method
# This graph displays the total sales amount for each payment method. It helps to identify which payment methods are most commonly used by customers.
ggplot(data, aes(x = Payment_Method, y = Sales_Amount, fill = Payment_Method)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Payment Method", x = "Payment Method", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Payment Method
# This graph displays the total sales amount for each payment method. It helps to identify which payment methods are most commonly used by customers.
ggplot(data, aes(x = Payment_Method, y = Sales_Amount) +
# Bar plot showing Sales Amount by Payment Method
# This graph displays the total sales amount for each payment method. It helps to identify which payment methods are most commonly used by customers.
ggplot(data, aes(x = Payment_Method, y = Sales_Amount))+
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Payment Method", x = "Payment Method", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Payment Method
# This graph displays the total sales amount for each payment method. It helps to identify which payment methods are most commonly used by customers.
ggplot(data, aes(x = Payment_Method, y = Sales_Amount))+
# Bar plot showing Sales Amount by Payment Method
# This graph displays the total sales amount for each payment method. It helps to identify which payment methods are most commonly used by customers.
ggplot(data, aes(x = Payment_Method, y = Sales_Amount, fill = Payment_Method)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Payment Method", x = "Payment Method", y = "Sales Amount") +
theme_minimal()
sales_by_region_rep <- data %>%
group_by(Region, Sales_Rep) %>%
summarise(total_sales = sum(Sales_Amount, na.rm = TRUE))
print("Total Sales by Region and Sales Rep:")
print(sales_by_region_rep)
avg_sales_by_category <- data %>%
group_by(Product_Category) %>%
summarise(avg_sales = mean(Sales_Amount, na.rm = TRUE))
print("Average Sales by Product Category:")
print(avg_sales_by_category)
# Box plot showing Outliers in Sales Amount
# This graph shows the distribution of sales amounts and highlights any outliers. It helps to identify any unusually high or low sales amounts.
ggplot(data, aes(x = "", y = Sales_Amount)) +
geom_boxplot() +
labs(title = "Outliers in Sales Amount", y = "Sales Amount") +
theme_minimal()
df <- read.csv("D:/siddh/coding/R/data/acs2017_census_tract_data.csv", header=TRUE)
#SUMMARY
summary(df)
#Missing Values In Columns
colSums(is.na(df))
#Distribution of total population across census tracts
hist(df$TotalPop, main="Distribution of Total Population", xlab="Population", col="blue")
#Average income per capita per state
aggregate(IncomePerCap ~ State, df, mean, na.rm=TRUE)
df %>% group_by(State) %>% summarise(median_income = median(IncomePerCap, na.rm=TRUE)) %>% arrange(desc(median_income))
#State with the highest median income per capita
library(dplyr)
df %>% group_by(State) %>% summarise(median_income = median(IncomePerCap, na.rm=TRUE)) %>% arrange(desc(median_income))
#Unemployment rate variation across different states
boxplot(Unemployment ~ State, data=df, las=2, main="Unemployment Rate by State", col="red")
source("D:/siddh/coding/R/lab_work_14_2_25.R", echo=TRUE)
source("D:/siddh/coding/R/lab_work_14_2_25.R", echo=TRUE)
# Correlation between income and poverty rate
cor(df$Income, df$Poverty, use="complete.obs")
#Top 5 counties with the highest child poverty rates
df %>% arrange(desc(ChildPoverty)) %>% select(County, State, ChildPoverty) %>% head(5)
#Percentage of people using public transportation for commuting
mean(df$Transit, na.rm=TRUE)
#Average commuting time by state
df %>% group_by(State) %>% summarise(avg_commute = mean(MeanCommute, na.rm=TRUE)) %>% arrange(desc(avg_commute))
#Racial composition (percentage) across census tracts
unique(df$Hispanic)
colMeans(df[race_cols], na.rm=TRUE)
#Average income per capita per state
aggregate(IncomePerCap ~ State, df, mean, na.rm=TRUE)
#Average income per capita per state
summarise(IncomePerCap ~ State, df, mean, na.rm=TRUE)
#Average income per capita per state
aggreagate(IncomePerCap ~ State, df, mean, na.rm=TRUE)
#Average income per capita per state
aggregate(IncomePerCap ~ State, df, mean, na.rm=TRUE)
#Average commuting time by state
df %>% group_by(State) %>% summarise(avg_commute = mean(MeanCommute, na.rm=TRUE)) %>% arrange(desc(avg_commute))
colMeans(df[race_cols], na.rm=TRUE)
#Top 5 states with the highest percentage of self-employed workers
df %>% group_by(State) %>% summarise(avg_self_employed = mean(SelfEmployed, na.rm=TRUE)) %>% arrange(desc(avg_self_employed)) %>% head(5)
#Employment rate by sector (Private, Public, Self-Employed)
sector_means <- colMeans(df[c("PrivateWork", "PublicWork", "SelfEmployed")], na.rm=TRUE)
barplot(sector_means, main="Employment Rate by Sector", col=c("blue", "red", "green"))
#Proportion of men to women in the dataset
sum(df$Men, na.rm=TRUE) / sum(df$Women, na.rm=TRUE)
#Household income comparison between urban and rural counties
df$UrbanRural <- ifelse(df$TotalPop > median(df$TotalPop, na.rm=TRUE), "Urban", "Rural")
aggregate(Income ~ UrbanRural, df, mean, na.rm=TRUE)
data("mtcars")
head(mtcars)
# Bar Chart
barplot(table(mtcars$cyl), main="Car Count by Cylinders", col="lightblue", xlab="Cylinders", ylab="Count")
# Histogram
hist(mtcars$mpg, main="Histogram of MPG", col="blue", xlab="Miles Per Gallon",breaks=10)
# Pie Chart
cylinders_count <- table(mtcars$cyl)
pie(cylinders_count, labels=paste(names(cylinders_count), "Cyl"), col=rainbow(length(cylinders_count)), main="Car Proportion by Cylinders")
# Boxplot - MPG by Cylinder Count
boxplot(mpg ~ cyl, data=mtcars, main="MPG by Cylinder Count", col=c("red", "green", "blue"), xlab="Cylinders", ylab="MPG")
# Scatter Plot - Relationship between MPG and Horsepower
plot(mtcars$hp, mtcars$mpg,main="MPG vs Horsepower", xlab="Horsepower", ylab="MPG", col=c("blue","red"), pch=c(1,2))
# Line Plot - Trend of MPG (sorted)
sorted_mtcars <- mtcars[order(mtcars$mpg), ]
plot(sorted_mtcars$mpg, type="o", col="purple", xlab="Index", ylab="MPG", main="MPG Trend")
# Density Plot - MPG Distribution
plot(density(mtcars$mpg), main="Density Plot of MPG", col="red", lwd=2)
# Density Plot - MPG Distribution
plot(density(mtcars$mpg), main="Density Plot of MPG", col="red")
# Density Plot - MPG Distribution
plot(density(mtcars$mpg), main="Density Plot of MPG", col="red",lwd=10)
# Bar Chart
barplot(mtcars$cyl, main="Car Count by Cylinders", col="lightblue", xlab="Cylinders", ylab="Count")
table(
# Bar Chart
barplot(table(mtcars$cyl), main="Car Count by Cylinders", col="lightblue", xlab="Cylinders", ylab="Count")
# Bar Chart
barplot(table(mtcars$cyl), main="Car Count by Cylinders", col="lightblue", xlab="Cylinders", ylab="Count")
# Bar Chart
barplot(table(mtcars$cyl), main="Car Count by Cylinders", col="lightblue", xlab="Cylinders", ylab="Count")
# Boxplot - MPG by Cylinder Count
boxplot(mpg ~ cyl, data=mtcars, main="MPG by Cylinder Count", col=c("red", "green", "blue"), xlab="Cylinders", ylab="MPG")
# Scatter Plot - Relationship between MPG and Horsepower
plot(mtcars$hp, mtcars$mpg,main="MPG vs Horsepower", xlab="Horsepower", ylab="MPG", col=c("blue","red"), pch=c(1,2))
# Line Plot - Trend of MPG (sorted)
sorted_mtcars <- mtcars[order(mtcars$mpg), ]
plot(sorted_mtcars$mpg, type="o", col="purple", xlab="Index", ylab="MPG", main="MPG Trend")
plot(sorted_mtcars$mpg, type="l", col="purple", xlab="Index", ylab="MPG", main="MPG Trend")
plot(sorted_mtcars$mpg, type="p", col="purple", xlab="Index", ylab="MPG", main="MPG Trend")
plot(sorted_mtcars$mpg, type="o", col="purple", xlab="Index", ylab="MPG", main="MPG Trend")
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Load the dataset
movies <- read.csv("D:/siddh/coding/R/Assignment/movies.csv")
head(movies)
summary(movies)
is.na(movies)
colsums(is.na(movies))
Colsums(is.na(movies))
colSums(is.na(movies))
# Convert Release_Period to a categorical variable
movies$Release_Period <- as.factor(movies$Release_Period)
head(movies$Release_Period)
# Summary statistics for revenue and budget
summary(movies$Revenue.INR)
summary(movies$Budget.INR)
# Analyze revenue trends by release period
revenue_trends <- movies %>%
group_by(Release_Period) %>%
summarise(Average_Revenue = mean(Revenue.INR., na.rm = TRUE))
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
# Analyze revenue by genre
genre_trends <- movies %>%
group_by(Genre) %>%
summarise(Average_Revenue = mean(Revenue.INR., na.rm = TRUE)) %>%
arrange(desc(Average_Revenue))
# Visualize revenue by genre
ggplot(genre_trends, aes(x = reorder(Genre, Average_Revenue), y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
# Visualize revenue by genre
ggplot(genre_trends, aes(x =Average_Revenue, y = Genre)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
# Visualize revenue by genre
ggplot(genre_trends, aes(x =Genre, y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
# Visualize revenue by genre
ggplot(genre_trends, aes(x =reoder(Genre), y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
# Visualize revenue by genre
ggplot(genre_trends, aes(x =reoder(Genre), y = reorder(Average_Revenue)) +
# Visualize revenue by genre
ggplot(genre_trends, aes(x =reoder(Genre,Average_Revenue), y = reorder(Average_Revenue)) +
# Visualize revenue by genre
ggplot(genre_trends, aes(x =reoder(Genre,Average_Revenue), y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
# Visualize revenue by genre
ggplot(genre_trends, aes(x =reoder(Genre,Average_Revenue), y = Average_Revenue)) +
# Visualize revenue by genre
ggplot(genre_trends, aes(x = reorder(Genre, Average_Revenue), y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "coral") +
coord_flip() +
theme_minimal() +
labs(title = "Average Movie Revenue by Genre",
x = "Genre", y = "Average Revenue (INR)")
data <- read.csv("D:/siddh/coding/R/data/23AIML070 THAKOR SIDDHRAJ ANILKUMAR - sales_data.csv")  # Replace with the correct path to your dataset
summary(data)
head(data)
data$Sale_Date <- as.Date(data$Sale_Date, format = "%Y-%m-%d")
data$Year <- year(data$Sale_Date)
data$Month <- month(data$Sale_Date, label = TRUE)
data$Weekday <- weekdays(data$Sale_Date)
head(data)
data$Sale_Date <- as.Date(data$Sale_Date, format = "%Y-%m-%d")
data$Year <- year(data$Sale_Date)
data$Year <- Year(data$Sale_Date)
summary(data %>% select(Sales_Amount, Quantity_Sold, Unit_Cost, Unit_Price, Discount))
print(colSums(is.na(data)))
print("Number of duplicate rows:")
print(sum(duplicated(data)))
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount, fill = Region)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount,fill="Region")) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales Amount by Region
# This graph displays the total sales amount for each region. It helps to identify which regions are generating the most revenue.
ggplot(data, aes(x = Region, y = Sales_Amount, fill = Region)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Region", x = "Region", y = "Sales Amount") +
theme_minimal()
# Line plot showing Sales Amount Trend Over Time
# This graph shows the trend of sales amount over time. It helps to identify any seasonal patterns or trends in sales.
ggplot(data, aes(x = Sale_Date, y = Sales_Amount)) +
geom_line() +
labs(title = "Sales Amount Trend Over Time", x = "Date", y = "Sales Amount") +
theme_minimal()
# Bar plot showing Sales by Product Category
# This graph displays the total sales amount for each product category. It helps to identify which product categories are the most popular.
ggplot(data, aes(x = Product_Category, y = Sales_Amount, fill = Product_Category)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales by Product Category", x = "Product Category", y = "Sales Amount") +
theme_minimal()
# Box plot showing Discount by Customer Type
# This graph shows the distribution of discounts given to different customer types. It helps to identify if certain customer types are receiving higher discounts.
ggplot(data, aes(x = Customer_Type, y = Discount, fill = Customer_Type)) +
geom_boxplot() +
labs(title = "Discount by Customer Type", x = "Customer Type", y = "Discount") +
theme_minimal()
cor_matrix <- data %>%
select(Sales_Amount, Quantity_Sold, Unit_Cost, Unit_Price, Discount) %>%
cor()
print("Correlation Matrix:")
print(cor_matrix)
# Bar plot showing Sales Amount by Payment Method
# This graph displays the total sales amount for each payment method. It helps to identify which payment methods are most commonly used by customers.
ggplot(data, aes(x = Payment_Method, y = Sales_Amount, fill = Payment_Method)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(title = "Sales Amount by Payment Method", x = "Payment Method", y = "Sales Amount") +
theme_minimal()
sales_by_region_rep <- data %>%
group_by(Region, Sales_Rep) %>%
summarise(total_sales = sum(Sales_Amount, na.rm = TRUE))
print("Total Sales by Region and Sales Rep:")
print(sales_by_region_rep)
avg_sales_by_category <- data %>%
group_by(Product_Category) %>%
summarise(avg_sales = mean(Sales_Amount, na.rm = TRUE))
print("Average Sales by Product Category:")
print(avg_sales_by_category)
# Box plot showing Outliers in Sales Amount
# This graph shows the distribution of sales amounts and highlights any outliers. It helps to identify any unusually high or low sales amounts.
ggplot(data, aes(x = "", y = Sales_Amount)) +
geom_boxplot() +
labs(title = "Outliers in Sales Amount", y = "Sales Amount") +
theme_minimal()
sales_data <- read_csv("data/23AIML070 THAKOR SIDDHRAJ ANILKUMAR - sales_data.csv")
library(readr)
library(dplyr)
library(ggplot2)
sales_data <- read_csv("data/23AIML070 THAKOR SIDDHRAJ ANILKUMAR - sales_data.csv")
head(sales_data)
str(sales_data)
summary(sales_data)
colSums(is.na(sales_data))
# Analyze revenue trends by release period
revenue_trends <- movies %>%
group_by(Release_Period) %>%
summarise(Average_Revenue = mean(Revenue.INR., na.rm = TRUE))
# Visualize revenue trends
ggplot(revenue_trends, aes(x = Release_Period, y = Average_Revenue)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Average Movie Revenue by Release Period",
x = "Release Period", y = "Average Revenue (INR)")
cor_matrix <- data %>%
select(Sales_Amount, Quantity_Sold, Unit_Cost, Unit_Price, Discount) %>%
cor()
print("Correlation Matrix:")
print(cor_matrix)
avg_sales_by_category <- data %>%
group_by(Product_Category) %>%
summarise(avg_sales = mean(Sales_Amount, na.rm = TRUE))
print("Average Sales by Product Category:")
print(avg_sales_by_category)
